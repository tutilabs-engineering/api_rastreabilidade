{
  "openapi": "3.0.0",
  "info": {
    "title": "Rastreabilidade de Embalagens Retornáveis",
    "description": "Sistema de monitoramento e controle de embalagens",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "http://185.209.179.253:15000/api/",
      "description": "Base de Teste em Servidor"
    },
    {
      "url": "http://localhost:7400/api/",
      "description": "Base Local"
    }
  ],
  "paths": {
    "/model": {
      "post": {
        "tags": [
          "models"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar modelo",
        "description": "Recebe os dados da requisição e cria um novo modelo. (Apenas usuários administradores)",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucesso: Retorna o modelo criado"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      },
      "get": {
        "tags": [
          "models"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Listar modelos",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "description": "quantidade de resultados a serem retornados"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "quantidade de resultados a serem pulados"
          }
        ],
        "description": "Lista todos os modelos cadastrados no banco de dados",
        "responses": {
          "200": {
            "description": "Sucesso: Retorna a lista de todos os modelos cadastrados"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/model/{id}": {
      "put": {
        "tags": [
          "models"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Editar modelo",
        "description": "Recebe o id de um modelo, os novos dados que serão validos e retorna o modelo editado. (Apenas usuários administradores)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id do modelo que será editado"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RequestEditModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucesso: Retorna o modelo editado"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      },
      "delete": {
        "tags": [
          "models"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar modelo",
        "description": "Recebe o id de um modelo, verifica se existe no banco de dados e deleta o modelo do id. (Apenas usuários administradores)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id do modelo que será deletado"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso: retorna uma mensagem"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/user/session": {
      "post": {
        "tags": ["users"],
        "summary": "Autenticação de usuário",
        "description": "Recebe um email e uma senha e retorna o token do usuário",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestSessionUser"
              },
              "examples": {
                "UserAdmin": {
                  "value": {
                    "email": "admin@tuti.com",
                    "password": "tuti@123"
                  }
                },
                "UserMnt": {
                  "value": {
                    "email": "mnt@tuti.com",
                    "password": "tuti@123"
                  }
                },
                "UserStandard": {
                  "value": {
                    "email": "standard@tuti.com",
                    "password": "tuti@123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucesso: Retorna o token e informações do usuário logado"
          },
          "400": {
            "description": "Falha: Retorna um erro informando que o usuário não existe no sistema"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Listar usuários",
        "description": "Lista todos os usuários ativos cadastrados no banco",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "description": "quantidade de resultados a serem retornados"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "quantidade de resultados a serem pulados"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso: Retorna a lista de todos os usuário ativos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Finaliza a rota"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar usuário",
        "description": "Recebe os dados da requisição e valida o email e matricula para criar um novo usuário",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateUser"
              },
              "examples": {
                "RequestUserAdmin": {
                  "value": {
                    "nome": "admin",
                    "matricula": "9999999",
                    "email": "admin@tuti.com",
                    "password": "tuti@123",
                    "admin": true,
                    "mnt": false
                  }
                },
                "RequestUserMnt": {
                  "value": {
                    "nome": "mnt",
                    "matricula": "88888888",
                    "email": "mnt@tuti.com",
                    "password": "tuti@123",
                    "admin": false,
                    "mnt": true
                  }
                },
                "RequestUserStandard": {
                  "value": {
                    "nome": "standard",
                    "matricula": "0000001",
                    "email": "standard@tuti.com",
                    "password": "tuti@123",
                    "admin": false,
                    "mnt": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucesso: Retorna usuário criado"
          },
          "400": {
            "description": "Falha: Retorna o erro de dados inválidos"
          },
          "404": {
            "description": "Falha: Retorna o erro de recursos nao encontrados"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Buscar usuário",
        "description": "Recebe uma id pro parametro e retorna um usuário no banco",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "usuário buscado pelo id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso: Retorna o usuário"
          },
          "401": {
            "description": "Não autorizado"
          },
          "404": {
            "description": "Parametro inválido"
          },
          "500": {
            "description": "Falha: finaliza a rota"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Editar usuário",
        "description": "Recebe uma id por parâmetro e edita seus dados ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id de usuário que será alterado",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEditUser"
              },
              "examples": {
                "RequestUserAdmin": {
                  "value": {
                    "nome": "NovoNome",
                    "matricula": "9999999",
                    "email": "novoEmail@tuti.com",
                    "password": "novasenha",
                    "admin": true,
                    "mnt": false,
                    "ativo": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucesso: Retorna o usuário editado"
          },
          "400": {
            "description": "Falha: Finaliza a rota"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar usuário",
        "description": "Recebe um id por parâmetro, busca o usuário e apaga ele do sistema",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do usuário que será apagado",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso: Usuário deletado"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/customer": {
      "get": {
        "tags": [
          "customers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Listar clientes",
        "description": "Lista todos os clientes cadastrados no banco de dados",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "description": "quantidade de resultados a serem retornados"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "quantidade de resultados a serem pulados"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status de resultados a serem pulados"
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso: retorna uma lista com todos os clientes"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      },
      "post": {
        "tags": [
          "customers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar cliente",
        "description": "Recebe os dados da requisição, faz a validação e cria um novo cliente. (Apenas usuários administradores)",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateCustomer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucesso: retorna o cliente criado"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "tags": [
          "customers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Buscar cliente",
        "description": "Busca um cliente especifico",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id do cliente que está sendo buscado",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso: Retorna o cliente"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      },
      "put": {
        "tags": [
          "customers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Editar cliente",
        "description": "Recebe o id de um cliente, o cnpj no corpo da requisição, e os dados que serão alterados. Então, os dados são válidados e retorna o cliente editado. (Apenas usuários administradores)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do cliente que será editado",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RequestEditCustomer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucesso: Retorna o cliente editado"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      },
      "delete": {
        "tags": [
          "customers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar cliente",
        "description": "Recebe o id de um cliente e o apaga do banco de dados. (Apenas usuários administradores)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id do cliente que será deletado",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso: retorna uma mensagem"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/package/{serial_number}": {
      "get": {
        "tags": [
          "packages"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Buscar embalagem",
        "description": "Recebe o serial de uma embalagem, verifica se existe no sistema e retorna embalagem",
        "parameters": [
          {
            "name": "serial_number",
            "in": "path",
            "description": "Serial da embalagem",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso: Retorna a embalagem",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ResponseFindPackageBySerialNumber"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/package/{id}": {
      "put": {
        "tags": [
          "packages"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Editar embalagem",
        "description": "Recebe o id de uma embalagem, os dados da requisição, valida os dados e atualiza. Obs.: Status tem 4 níveis diferentes, sendo eles: 0 -> disponível, 1 -> Em uso, 2 -> No cliente, 3 -> Em manutenção",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da embalagem editada",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestEditPackage"
              },
              "examples": {
                "RequestPackage": {
                  "value": {
                    "FK_modelo": "bc7f875c-1e9c-40db-970c-1b91e15bdf08",
                    "FK_destino": "bc7f875c-1e9c-40db-970c-1b91e15bdf08",
                    "origem": "Filial",
                    "status": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucesso."
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Embalagem não existe no sistema."
          },
          "401": {
            "description": "Não autorizado."
          },
          "500": {
            "description": "Falha: Rota finalizada."
          }
        }
      }
    },

    "/package":{
      "post": {
        "tags": ["packages"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Criar embalagem",
        "description": "Recebe os dados da requisição, faz a validação e cria embalagem. (Apenas usuários administradores)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreatePackage"
              },
              "examples": {
                "RequestPackage": {
                  "value": {
                    "serial_number": "TUTILABS-0002",
                    "origem": "Filial",
                    "FK_modelo": "06119762-dc5e-4c85-9119-c766e1f83573",
                    "FK_destino": "30607e11-d4ae-46ca-95aa-2bec2976096f"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucesso"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Não encontrado."
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "package/model/:id":{
      "get": {
        "tags": ["packages"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Buscar quantidade de embalagens por modelo",
        "description": "Recebe o id de um modelo e retorna a quantidade por status em cada unidade",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id do modelo",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso.",
            "content": {
              "application/json": {
                "schema":{
                  "$ref":"#components/schemas/ReponseListQuantityPackageByModel"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "package/stopped":{
      "get": {
        "tags": ["packages"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Buscar quantidade de embalagens paradas por cliente",
        "description": "Retorna a quantidade de embalagens paradas por cliente",
        "responses": {
          "200": {
            "description": "Sucesso.",
            "content": {
              "application/json": {
                "schema":{
                  "$ref":"#components/schemas/ReponseListQuantityPackageStoppedByClient"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "package/mnt":{
      "get": {
        "tags": ["packages"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Listar quantidade de embalagens em manutenção por modelo",
        "description": "Retorna a quantidade de embalagens em manutenção por modelo",
        "responses": {
          "200": {
            "description": "Sucesso.",
            "content": {
              "application/json": {
                "schema":{
                  "$ref":"#components/schemas/ReponseListQuantityPackageMntByModel"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/cpc/{FK_costumer}": {
      "get": {
        "tags": [
          "cpc (Customer Preference Control)"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Buscar cpc",
        "description": "Recebe o id do cpc, verifica se existe no banco de dados e retorna cpc",
        "parameters": [
          {
            "name": "FK_costumer",
            "in": "path",
            "description": "Id do controle de preferência cadastrado",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso: Retorna o cpc"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/cpc/{id}": {
      "delete": {
        "tags": [
          "cpc (Customer Preference Control)"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Editar cpc",
        "description": "Recebe o id de um cpc, verifica se existe no banco e deleta o cpc",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do cpc",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso: retorna uma mensagem"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/cpc": {
      "get": {
        "tags": [
          "cpc (Customer Preference Control)"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Listar controle de prefêrencia de clientes",
        "description": "Lista de prefêrencia de modelos de todos os clientes",
        "responses": {
          "200": {
            "description": "Sucesso: Retorna a lista com todas as opções de controle de prefência de cliente"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      },
      "post": {
        "tags": [
          "cpc (Customer Preference Control)"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar cpc",
        "description": "Recebe o id de um cliente e o id de um modelo pela requisição, valida os dados, e registra a preferência no banco",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateCpc"
              },
              "examples": {
                "RequestCpc": {
                  "value": {
                    "FK_customer": "Insira o id de um cliente válido",
                    "FK_model": "Insira o id de um modelo válido"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucesso: Retorna o cpc cadastrado"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/provider": {
      "get": {
        "tags": [
          "providers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Lista fornecedores",
        "description": "Lista todas as embalagens cadastradas no banco de dados.",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "description": "quantidade de resultados a serem retornados",
            "default": 10
          },
          {
            "name": "skip",
            "in": "query",
            "description": "quantidade de resultados a serem pulados",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso. Retorna a lista de todos os fornecedores",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ResponseListProviders"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Não autorizado."
          },
          "500": {
            "description": "Falha: Rota finalizada."
          }
        }
      },
      "post": {
        "tags": [
          "providers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Criar fornecedor",
        "description": "Recebe nome e local e cria fornecedor no banco de dados.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateProvider"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Criado"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/provider/{id}": {
      "put": {
        "tags": [
          "providers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Editar fornecedor",
        "description": "Recebe id, nome ou valor do externo e atualiza no banco",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do fornecedor editada",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateProvider"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucesso."
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Fornecedor não existe no sistema."
          },
          "401": {
            "description": "Não autorizado."
          },
          "500": {
            "description": "Falha: Rota finalizada."
          }
        }
      }
    },
    "/sme": {
      "get": {
        "tags": [
          "sme (Packing Movement Status)"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Listar sme",
        "description": "Lista todos os registros de movimentação de embalagens",
        "responses": {
          "200": {
            "description": "Sucesso: Retorna lista com todas as movimentações de embalagens"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/sme/find/{id}": {
      "get": {
        "tags": [
          "sme (Packing Movement Status)"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Listar sme",
        "description": "Lista todos os registros de movimentação de embalagens",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id is required",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso: Retorna lista com todas as movimentações de embalagens"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/sme/cnpj/{cnpj}": {
      "get": {
        "tags": [
          "sme (Packing Movement Status)"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Listar sme",
        "description": "Lista todos os registros de movimentação de embalagens",
        "parameters": [
          {
            "name": "cnpj",
            "in": "path",
            "description": "cnpj",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso: Retorna lista com todas as movimentações de embalagens"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/sme/serial/{serial_number}": {
      "get": {
        "tags": [
          "sme (Packing Movement Status)"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Listar sme",
        "description": "Lista todos os registros de movimentação de embalagens",
        "parameters": [
          {
            "name": "serial_number",
            "in": "path",
            "description": "serial_number",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso: Retorna lista com todas as movimentações de embalagens"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/sme/relatory": {
      "get": {
        "tags": [
          "sme (Packing Movement Status)"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Gerar relatório de sme",
        "description": "Recebe uma data inicial e uma data final por query params e retorna os registros de sme entres essas datas",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "description": "quantidade de resultados a serem retornados"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "quantidade de resultados a serem pulados"
          }
       
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example":{
                  "inicial": "2023-12-01",
                  "final": "2023-12-01"
   
                },
                "properties": {
                  "inicial": {
                    "type": "Date"
                  },
                  "final": {
                    "type": "Date"
                  }
                }
              }
            }
          }
        },
        "response": {
          "200": {
            "description": "Sucesso: Retorna uma lista com as movimentações entre as datas"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/smm": {
      "get": {
        "tags": ["smm (Maintenance Movement Status)"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Listar smm",
        "description": "Lista todas as movimentações de embalagens para manutenção",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "description": "quantidade de resultados a serem retornados"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "quantidade de resultados a serem pulados"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status 1 - Externo ou 0 - Interno"
          }
       
        ],
        "responses": {
          "200": {
            "description": "Sucesso: Retorna uma lista com todas as movimentações de manutenção realizadas"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    },
    "/smm/relatory": {
      "get": {
        "tags": ["smm (Maintenance Movement Status)"],
        "security": [{ "bearerAuth": [] }],
        "summary": "Listar smm",
        "description": "Lista todas as movimentações de embalagens para manutenção",
        "parameters": [
          {
            "name": "dataInicial",
            "in": "query",
            "description": "Data Inicial"
          },
          {
            "name": "dataFinal",
            "in": "query",
            "description": "Data Final"
          }
       
        ],
        "responses": {
          "200": {
            "description": "Sucesso: Retorna uma lista com todas as movimentações de manutenção realizadas"
          },
          "401": {
            "description": "Não autorizado"
          },
          "500": {
            "description": "Falha: Rota finalizada"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RequestCreateUser": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string"
          },
          "matricula": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          },
          "mnt": {
            "type": "boolean"
          }
        }
      },
      "RequestEditUser": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string"
          },
          "matricula": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          },
          "mnt": {
            "type": "boolean"
          },
          "ativo": {
            "type": "boolean"
          }
        }
      },
      "RequestSessionUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "RequestCreateCustomer": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "Selecionar imagem do cliente"
          },
          "cnpj": {
            "type": "string",
            "description": "Necessário cnpj válido"
          },
          "razao_social": {
            "type": "string"
          }
        }
      },
      "RequestEditCustomer": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "Selecionar nova imagem do cliente ou enviar vázio para não alterar a imagem"
          },
          "cnpj": {
            "type": "string",
            "description": "Necessário cnpj válido"
          },
          "razao_social": {
            "type": "string"
          }
        }
      },
      "RequestCreateModel": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "Selecionar imagem do modelo"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "RequestEditModel": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "Selecionar uma nova imagem do modelo ou vázio"
          },
          "descricao": {
            "type": "string"
          }
        }
      },
      "RequestCreatePackage": {
        "type": "object",
        "properties": {
          "serial_number": {
            "type": "string",
            "description": "Numero de serie da embalagem"
          },
          "origem": {
            "type": "string",
            "description": "Unidade da embalagem"
          },
          "FK_modelo": {
            "type": "string",
            "description": "Id do modelo que será vinculado a embalagem"
          },
          "FK_destino": {
            "type": "string",
            "description": "Id do cliente que será vinculado a embalagem"
          }          
        }
      },
      "RequestEditPackage": {
        "type": "object",
        "properties": {
          "FK_destino": {
            "type": "string",
            "description": "id do cliente"
          },
          "FK_modelo": {
            "type": "string",
            "description": "id do modelo"
          },
          "origem": {
            "type": "string",
            "description": "nome da unidade"
          },
          "status": {
            "type": "number",
            "description": "status da embalagem",
            "enum": [
              0,
              1,
              2,
              3
            ],
            "example": 3
          }
        }
      },
      "RequestCreateProvider": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string"
          },
          "externo": {
            "type": "boolean"
          }
        }
      },
      "RequestUpdateProvider": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string"
          },
          "externo": {
            "type": "boolean"
          }
        }
      },
      "RequestCreateCpc": {
        "type": "object",
        "properties": {
          "FK_customer": {
            "type": "string"
          },
          "FK_model": {
            "type": "string"
          }
        }
      },
      "RequestEditCpc": {
        "type": "object",
        "properties": {
          "FK_customer": {
            "type": "string"
          },
          "FK_model": {
            "type": "string"
          }
        }
      },
      "RequestCreateSme": {
        "type": "object",
        "propertieis": {
          "id_customer": {
            "type": "string"
          },
          "id_package": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "matricula": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "RequestCreateSmm": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string"
              },
              "matricula": {
                "type": "string"
              }
            }
          },
          "fornecedor": {
            "type": "object",
            "properties": {
              "descricao": {
                "type": "string"
              },
              "statusDoFornecedor": {
                "type": "boolean"
              }
            }
          },
          "embalagem": {
            "type": "object",
            "properties": {
              "descricao": {
                "type": "string"
              },
              "serial_number": {
                "type": "string"
              },
              "modeloDaEmbalagem": {
                "type": "string"
              }
            }
          }
        }
      },
      "ResponseFindPackageBySerialNumber": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "serial_number": {
            "type": "string"
          },
          "origem": {
            "type": "string"
          },
          "FK_destino": {
            "type": "string"
          },
          "FK_modelo": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "models": {
            "type": "object",
            "properties": {
              "descricao": {
                "type": "string"
              }
            }
          }
        }
      },
      "ResponseListProviders": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          },
          "externo": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "ReponseListQuantityPackageByModel":{
        "type": "object",
        "properties": {
          "Disponivel": {
            "type":"object",
            "properties": {
              "_count": {
                "type": "number"
              },
              "origem":{
                "type": "string"
              }
            }
          },
          "EmUso": {
            "type":"object",
            "properties": {
              "_count": {
                "type": "number"
              },
              "origem":{
                "type": "string"
              }
            }
          },
          "Externas": {
            "type":"object",
            "properties": {
              "_count": {
                "type": "number"
              },
              "origem":{
                "type": "string"
              }
            }
          },
          "Manutencao": {
            "type":"object",
            "properties":{
              "embalagensExternas":{
                "type": "number"
              },
              "embalagensInternas":{
                "type": "number"
              }
            }
          },
          "Clientes": {
            "type":"object",
            "properties":{
              "customers": {
                "type": "object",
                "properties": {
                  "razao_social":{
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "ReponseListQuantityPackageStoppedByClient":{
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "description": "Quantidade de embalagens"
          },
          "razao_social": {
            "type": "string",
            "description": "Razão social do cliente"            
          }
        }
      },
      "ReponseListQuantityPackageMntByModel":{
        "type": "object",
        "properties": {
          "count": {
            "type": "number",
            "description": "Quantidade de embalagens"
          },
          "descricao": {
            "type": "string",
            "description": "Descricao do modelo"            
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}