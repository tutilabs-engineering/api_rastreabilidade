generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cpc {
  id          String    @id @default(uuid())
  FK_customer String   
  FK_model    String   
  createdAt   DateTime  @default(now()) 
  updatedAt   DateTime  @default(now()) 
  customers   customers @relation(fields: [FK_customer], references: [id], onDelete: SetNull, onUpdate: SetNull, map: "FK_customer_customers")
  models      models    @relation(fields: [FK_model], references: [id], onDelete: SetNull, onUpdate: SetNull, map: "FK_model_models")
}

model customers {
  id           String     @id @default(uuid())
  cnpj         String     @unique() 
  razao_social String     @unique() 
  img_path     String     
  ativo        Boolean    @default(true)
  createdAt    DateTime   @default(now()) 
  updatedAt    DateTime   @default(now()) 
  cpc          cpc[]
  packages     packages[]
}

model models {
  id        String     @id @default(uuid())
  descricao String     
  img_path  String     
  createdAt DateTime   @default(now()) 
  updatedAt DateTime   @default(now()) 
  cpc       cpc[]
  packages  packages[]
}

model packages {
  id            String    @id @default(uuid())
  serial_number String    @unique() 
  origem        String    
  FK_destino    String   
  FK_modelo     String   
  status        Int
  createdAt     DateTime  @default(now()) 
  updatedAt     DateTime  @default(now()) 
  customers     customers @relation(fields: [FK_destino], references: [id], onDelete: SetNull, onUpdate: SetNull, map: "FK_destino_customers")
  models        models    @relation(fields: [FK_modelo], references: [id], onDelete: SetNull, onUpdate: SetNull, map: "FK_modelo_models")
}

model providers {
  id        String   @id @default(uuid())
  nome      String
  externo   Boolean
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now()) 
}

model sme {
  id            String  @id @default(uuid())
  razao_social  String  
  cnpj          String  
  ativo         Boolean
  serial_number String  
  origem        String  
  destino       String  
  status        String  
  modelo        String  
  username      String  
  matricula     String  
  data          DateTime ? 
}

model smm {
  id                   String  @id @default(uuid())
  username             String  
  matricula            String  
  fornecedor           String  
  statusDoFornecedor   String  
  descricao            String
  serial_number        String  
  statusDaEmbalagem    String  
  modeloDaEmbalagem    String  
  statusDeMovimentacao Boolean @default(false)
  criadoEm             DateTime  
  concluidoEm          DateTime? 
}

model users {
  id        String   @id @default(uuid())
  nome      String   
  matricula String   @unique() 
  email     String   @unique() 
  password  String   
  admin     Boolean  @default(false)
  mnt       Boolean  @default(false)
  ativo     Boolean  @default(true)
  createdAt DateTime @default(now()) 
  updatedAt DateTime @default(now()) 
}
