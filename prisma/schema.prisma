generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cpc {
  id          String    @id @default(uuid())
  FK_customer String    @db.Uuid
  FK_model    String    @db.Uuid
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @default(now()) @db.Timestamp(6)
  customers   customers @relation(fields: [FK_customer], references: [id], onDelete: SetNull, onUpdate: SetNull, map: "FK_customer_customers")
  models      models    @relation(fields: [FK_model], references: [id], onDelete: SetNull, onUpdate: SetNull, map: "FK_model_models")
}

model customers {
  id           String     @id @default(uuid())
  cnpj         String     @unique(map: "UQ_e25f7bf72237b287e0cc9e60192") @db.VarChar
  razao_social String     @unique(map: "UQ_4f8f291d182888565ba9a6adf5f") @db.VarChar
  img_path     String     @db.VarChar
  ativo        Boolean    @default(true)
  createdAt    DateTime   @default(now()) @db.Timestamp(6)
  updatedAt    DateTime   @default(now()) @db.Timestamp(6)
  cpc          cpc[]
  packages     packages[]
}

model models {
  id        String     @id @default(uuid())
  descricao String     @db.VarChar
  img_path  String     @db.VarChar
  createdAt DateTime   @default(now()) @db.Timestamp(6)
  updatedAt DateTime   @default(now()) @db.Timestamp(6)
  cpc       cpc[]
  packages  packages[]
}

model packages {
  id            String    @id @default(uuid())
  serial_number String    @unique(map: "UQ_519a3366d1454a4b8e63c9d5d1b") @db.VarChar
  origem        String    @db.VarChar
  FK_destino    String    @db.Uuid
  FK_modelo     String    @db.Uuid
  status        Int
  createdAt     DateTime  @default(now()) @db.Timestamp(6)
  updatedAt     DateTime  @default(now()) @db.Timestamp(6)
  customers     customers @relation(fields: [FK_destino], references: [id], onDelete: SetNull, onUpdate: SetNull, map: "FK_destino_customers")
  models        models    @relation(fields: [FK_modelo], references: [id], onDelete: SetNull, onUpdate: SetNull, map: "FK_modelo_models")
}

model providers {
  id        String   @id @default(uuid())
  nome      String
  externo   Boolean
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
}

model sme {
  id            String  @id @default(uuid())
  razao_social  String  @db.VarChar
  cnpj          String  @db.VarChar
  ativo         Boolean
  serial_number String  @db.VarChar
  origem        String  @db.VarChar
  destino       String  @db.VarChar
  status        String  @db.VarChar
  modelo        String  @db.VarChar
  username      String  @db.VarChar
  matricula     String  @db.VarChar
  data          String  @db.VarChar
}

model smm {
  id                   String  @id @default(uuid())
  username             String  @db.VarChar
  matricula            String  @db.VarChar
  fornecedor           String  @db.VarChar
  statusDoFornecedor   String  @db.VarChar
  descricao            String
  serial_number        String  @db.VarChar
  statusDaEmbalagem    String  @db.VarChar
  modeloDaEmbalagem    String  @db.VarChar
  statusDeMovimentacao Boolean @default(false)
  criadoEm             String  @db.VarChar
  concluidoEm          String? @db.VarChar
}

model users {
  id        String   @id @default(uuid())
  nome      String   @db.VarChar
  matricula String   @unique(map: "UQ_7d53fc05d1e07b20752d6a89ce6") @db.VarChar
  email     String   @unique(map: "UQ_97672ac88f789774dd47f7c8be3") @db.VarChar
  password  String   @db.VarChar
  admin     Boolean  @default(false)
  mnt       Boolean  @default(false)
  ativo     Boolean  @default(true)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
}
